##################################################################
#                    DSSG Team Cincinnati                        #
#                      Model Experiments                         #
##################################################################

#This file trains on the period for which we have the most
#data available which starting from Jan 2012 to Dec 2014

# Temporal stuff
start_date: '01Jan2012'    #train only on inspections after this date
fake_today: '31Dec2013'
validation_window: '1Year'  # Or '1Month'

# only use residential parcels
residential_only: True

############################
# Feature selection        #
############################

#List features to use, follow the syntax table.column where column
#is used in a LIKE statement
#http://www.postgresql.org/docs/current/static/functions-matching.html
features:
    #Spatio temporal features from the fire dataset
    - fire_50m_3months.total
    #Spatiotemporal features form the crime dataset
    - crime_50m_3months.total
    #Crime aggregation features: crime rate 1, 3 years
    - crime_agg.%
    #Tax aggregation features with home values and years in foreclosure
    - tax.%
    #Spatio temporal features from the 311 dataset
    - three11_50m_3months.total
    #Spatio temporal features from the sales dataset
    - sales_50m_3months.total
    #Spatio temporal features from the permits data
    - permits_50m_3months.total
    #Census aggregation features: housing density, rates per household
    - census_2010.rate_%
    #Named entities: count of years in a given period of time that the
    #was owned by a person, government institution or company
    - names_entities.%
    #Parcel area
    - parc_area.%
    #Building year
    - parc_year.%
    #dummy varirable - Type of home: single family, multi family
    - house_type.%

############################
# Model selection          #
############################

#See grid_values.py for supported models
#Use valid scikit-learn classes, provide the full path to the class
models:
  - 'sklearn.ensemble.RandomForestClassifier'

#For each model you select, the pipeline will
#train a bunch of models, see grid_values for more
grid_size: 'big'

############################
# Experiment name          #
############################

#The effecy of this will be different depending of which logger you are using
#in both case is optional. If you are using mongo, this will just simpy add a new
#key, this is useful for comments. If you are pickling results, this will be a prefix
#in your pkl files
experiment_name: 'spring_2016_all_freq_features_50m_3months_12_13'
