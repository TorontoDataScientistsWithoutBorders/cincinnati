POSTPROCESSING := ../field_test_preparation/postprocess
RESULTS_SCHEMA := model_results
EXPERIMENT_DIRECTORY := ./medium_models

; run input SQL file and touch output
psql()
   psql -v ON_ERROR_STOP=1 -f $INPUT && touch $OUTPUT

; parse a csv file, transfer it into the database and touch output
psql_header() []
        cat $INPUT  |
        psql -v ON_ERROR_STOP=1 -c "\COPY ${RESULTS_SCHEMA}.${TABLE} FROM STDIN WITH CSV HEADER" && touch $OUTPUT

; create tables in database 
$[OUTPUT_FOLDER]/tables/created/all_models <- tables/create_table_all_models.sql [method:psql]
$[OUTPUT_FOLDER]/tables/created/model_groups <- tables/create_table_model_groups.sql [method:psql]
$[OUTPUT_FOLDER]/tables/created/all_top_k <- tables/create_table_all_top_k.sql [method:psql]
$[OUTPUT_FOLDER]/tables/created/feature_importances <- tables/create_table_feature_importances.sql [method:psql]
$[OUTPUT_FOLDER]/tables/created/feature_crosstabs <- tables/create_table_feature_crosstabs.sql [method:psql]
$[OUTPUT_FOLDER]/tables/created/model_reasons <- tables/create_table_model_reasons.sql [method:psql]
$[OUTPUT_FOLDER]/tables/created/parcel_info <- tables/create_table_parcel_info.sql [method:psql]

; collect all model info for experiment directory
$[OUTPUT_FOLDER]/all_models.csv <- [-timecheck]
  python get_all_model_info.py

; copy that table to database
TABLE=all_models
$[OUTPUT_FOLDER]/tables/copied/all_models <- $[OUTPUT_FOLDER]/all_models.csv, $[OUTPUT_FOLDER]/tables/created/all_models [method:psql_header]

; group models across time
$[OUTPUT_FOLDER]/model_groups.csv <- get_model_groups.py, $[OUTPUT_FOLDER]/tables/copied/all_models
    python $INPUT 

;copy model groups to db
TABLE=model_groups
$[OUTPUT_FOLDER]/tables/copied/model_groups <- $[OUTPUT_FOLDER]/model_groups.csv, $[OUTPUT_FOLDER]/tables/created/model_groups [method:psql_header]

; add top model reason lookup to db
TABLE=model_reasons
$[OUTPUT_FOLDER]/tables/copied/model_reasons <- top_model_reason_lookup.csv, $[OUTPUT_FOLDER]/tables/created/model_reasons [method:psql_header]

; retrain models
$[OUTPUT_FOLDER]/feature_importances.csv, $[OUTPUT_FOLDER]/all_top_k.csv <- $[OUTPUT_FOLDER]/tables/copied/model_groups, $[OUTPUT_FOLDER]/tables/copied/all_models, $[OUTPUT_FOLDER]/tables/copied/model_reasons
    python retrain_models.py

; add feature importances and all_top_k to db
TABLE=feature_importances
$[OUTPUT_FOLDER]/tables/copied/feature_importances <- $[OUTPUT_FOLDER]/feature_importances.csv, $[OUTPUT_FOLDER]/tables/created/feature_importances [method:psql_header]
TABLE=all_top_k
$[OUTPUT_FOLDER]/tables/copied/all_top_k <- $[OUTPUT_FOLDER]/all_top_k.csv, $[OUTPUT_FOLDER]/tables/created/all_top_k [method:psql_header]

; make feature crosstabs
$[OUTPUT_FOLDER]/feature_crosstabs.csv <- $[OUTPUT_FOLDER]/tables/copied/all_top_k
    python make_feature_crosstabs.py
;add feature crosstabs to db
TABLE=feature_crosstabs
$[OUTPUT_FOLDER]/tables/copied/feature_crosstabs <- $[OUTPUT_FOLDER]/feature_crosstabs.csv, $[OUTPUT_FOLDER]/tables/created/feature_crosstabs [method:psql_header]

; download parcel info
$[OUTPUT_FOLDER]/postprocess/parcel_info.csv <- $[POSTPROCESSING]/download_parcel_info
    bash $INPUT 
; add parcel info to db
TABLE=parcel_info
$[OUTPUT_FOLDER]/tables/copied/parcel_info <- $[OUTPUT_FOLDER]/postprocess/parcel_info.csv, $[OUTPUT_FOLDER]/tables/created/parcel_info [method:psql_header] 

; create heatmap
list_overlap_heatmap.png <- $[OUTPUT_FOLDER]/tables/copied/all_top_k, $[OUTPUT_FOLDER]/top_model_reason_lookup
   python make_list_overlap_heatmap.py

; generate a list 
;inspection_list <- all_top_k
;python make_inspection_list.py
